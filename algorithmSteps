step 0:  - read the image header
	- dynamically allocate the imageAry

step 1:  1.1 zeroFrame imageAry
1.2 read from the input onto imageAry, begin at imageAry[1][1]
	1.3 pretty print the imageAry to argv[3]

step 2:  nextCC <-- findNextComponent // nextCC is a chainCode object
	output nextCC's rowPostion, colPosition, label to argv[2] 
	lastZeroDir <-- 4
	currPixel <-- firstNoneZero of nextCC
	
step 3:  nextDir <-- lastZeroDir + 1
	chainDir <-- findNextNoneZeroNeighbor (nextDir)
	output chainDir to argv[2]	
	lastZeroDir <-- lookup lastZeroTable[chainDir]
	currPixel <-- lookup neighborTable[chainDir]
  
step 4: repeat step 3 until currPixel is matched with firstNoneZero of nextCC
        //  end of one chain code of a connected component

step 5:  repeat step 2 to step 4 until no more connected components in the
	input image.

step 6:  close all files
